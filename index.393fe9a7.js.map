{"mappings":"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","sources":["src/index.js"],"sourcesContent":["const city1 = document.querySelector(\"div[data-city='1']\");\nconst city2 = document.querySelector(\"div[data-city='2']\");\nconst city3 = document.querySelector(\"div[data-city='3']\");\nconst city4 = document.querySelector(\"div[data-city='4']\");\nconst city5 = document.querySelector(\"div[data-city='5']\");\nconst city6 = document.querySelector(\"div[data-city='6']\");\n\nconst cityBack1 = document.querySelector(\"div[data-city='21']\");\nconst cityBack2 = document.querySelector(\"div[data-city='22']\");\nconst cityBack3 = document.querySelector(\"div[data-city='23']\");\nconst cityBack4 = document.querySelector(\"div[data-city='24']\");\nconst cityBack5 = document.querySelector(\"div[data-city='25']\");\nconst cityBack6 = document.querySelector(\"div[data-city='26']\");\n\nconst arrCity = [city1, city2, city3, city4, city5, city6]\nconst arrCityBack = [cityBack1, cityBack2, cityBack3, cityBack4, cityBack5, cityBack6]\n\nconst form = document.querySelector(\".header_form\");\nconst main = document.querySelector(\".main\");\nconst footerForm = document.querySelector(\".footer_form\")\n\nfooterForm.addEventListener(\"submit\", onFooterFormSubmit);\n\nfunction onFooterFormSubmit(evt) {\n    evt.preventDefault();  \n    const query = evt.currentTarget.elements.footer_input.value.trim();\n    const days = evt.currentTarget.elements.footer_select.value;\n\n    getDaysWeather(query, days).then(data => console.log(data))\n    .catch(error => console.log(error.message))\n}\n\n\nform.addEventListener(\"submit\", onSearchFormSubmit);\nfunction onSearchFormSubmit(evt) {\n    evt.preventDefault() \n    const query = evt.currentTarget.elements.header_city.value.trim()\n\n    getCityWeather(query).then(data => {\n        main.innerHTML = createMarkupBigCard(data)\n      \n         \n    })\n        .catch(error => console.log(error.message))\n        .finally(() => {\n          \n        })\n    evt.currentTarget.elements.header_city.value = \"\";\n}\n\nconst cities = [\"Kyiv\", \"Lviv\", \"Odesa\", \"Doha\", \"Mirissa\", \"Krabi\"] \n\nconst getCityWeather = async (query) => {\n\n    const BASE_URL = \"http://api.weatherapi.com/v1/current.json\";\n    const API_KEY = \"53d51b3de44f43c5a8f183833232309\"\n\n  \n        const resp = await fetch(`${BASE_URL}?key=${API_KEY}&q=${query}`)\n        if (!resp.ok) {\n            throw new Error(resp.statusText)\n        }\n        return resp.json()\n\n}\n\n\n\nconst getWeather = async () => {\n\n    const BASE_URL = \"http://api.weatherapi.com/v1/current.json\";\n    const API_KEY = \"53d51b3de44f43c5a8f183833232309\"\n\n    const arrayOfPromisses = cities.map(async (city) => {\n        const resp = await fetch(`${BASE_URL}?key=${API_KEY}&q=${city}`)\n        if (!resp.ok) {\n            throw new Error(resp.statusText)\n        }\n        return resp.json()\n    })\n\n    const weather = await Promise.all(arrayOfPromisses);\nreturn weather\n\n}\n\ngetWeather().then(data => {\n\n    data.forEach((item, idx) => {\n        console.log(item)\n        arrCity[idx].innerHTML = createMarkupFront(item);\n        arrCityBack[idx].innerHTML = createMarkupBack(item)\n })\n  \n})\n\nconst getDaysWeather = async (query, days) => {\n\nconst BASE_URL = \"http://api.weatherapi.com/v1/forecast.json\";\nconst API_KEY = \"53d51b3de44f43c5a8f183833232309\"\n\n    const resp = await fetch(`${BASE_URL}?key=${API_KEY}&q=${query}&days=${days}`)\n    if (!resp.ok) {\n        throw new Error(resp.statusText)\n    }\n    return resp.json()\n}\n\n// getDaysWeather(\"Lviv\", 10).then(data => console.log(data))\n\nfunction createMarkupFront(arr) {\n  \n        return ` <div class=\"city_item_title_wrapper\">\n            <h2 class=\"city_item_title\">${arr.location.name}</h2>\n            <img class=\"circle\" src=\"${arr.current.condition.icon}\" alt=\"weather icon\">\n          </div>\n          <h3 class=\"city_item_temp_title\">${arr.current.temp_c}C&#176;</h3>\n          <p class=\"real_feel\">Real feel ${arr.current.feelslike_c}C&#176</p>\n          <div class=\"city_item_text_wrapper\">\n            <p class=\"city_item_text\">Wind: ${arr.current.wind_kph} kph</p>\n            <p class=\"city_item_text\">Pressure: ${arr.current.pressure_mb} mb</p>\n          </div>`\n}\n    \n\nfunction createMarkupBack(arr) {\n  \n    return ` \n      <h2 class=\"city_item_back_name\">${arr.location.name}</h2>\n                  <h3 class=\"city_item_back_region\">${ arr.location.region}</h3>\n            <h3 class=\"city_item_back_country\"> ${arr.location.country}</h3>\n         <p class=\"city_item_back_text\">Condition: ${arr.current.condition.text}</p>\n            <p class=\"city_item_back_text\">Humidity: ${arr.current.humidity}%</p>\n            <p class=\"city_item_back_text\">Wind direction: ${arr.current.wind_dir}</p>\n            <p class=\"city_item_back_text\">Gust: ${arr.current.gust_kph} kph</p>\n            <p class=\"city_item_back_text\">UV: ${arr.current.uv}</p>\n            <p class=\"city_item_back_text\">Last updated: ${arr.current.last_updated}</p>\n        `\n}\n    \nfunction createMarkupBigCard(arr) {\n    return `\n        <div class=\"big_city_card\">\n        <div class=\"city_item_title_wrapper\">\n            <h2 class=\"big_city_card_title\">${arr.location.name}</h2>\n             <img class=\"circle_big \" src=\"${arr.current.condition.icon}\" alt=\"weather icon\"> \n          </div>\n          <div class=\"big_city_card_country_wrapper\"><h3 class=\"big_city_card_country\">${arr.location.country}</h3>\n                  <p class=\"big_city_card_condition\">${arr.current.condition.text}</p></div>\n            <div class=\"big_city_card_wrapper_bottom\"> \n          <div class=\"big_city_card_wrapper_text\">\n            <p class=\"big_city_card_text\">Wind:  ${arr.current.wind_kph} kph</p>\n            <p class=\"big_city_card_text\">Pressure:  ${arr.current.pressure_mb} mb</p>\n            <p class=\"big_city_card_text\">Humidity:  ${arr.current.humidity}%</p>\n            <p class=\"big_city_card_text\">Wind direction: ${arr.current.wind_dir}</p>\n            <p class=\"big_city_card_text\">Gust:  ${arr.current.gust_kph} kph</p>\n            <p class=\"big_city_card_text\">UV: ${arr.current.uv}</p>\n         </div>\n         <div class=\"big_city_card_temp_wrapper\">  \n                 <h3 class=\"big_city_card_temp_title\">${arr.current.temp_c}C&#176;</h3>\n          <p class=\"big_city_card_real_feel\">Real feel ${arr.current.feelslike_c}C&#176</p></div>\n      </div>     \n      </div>\n    `\n}\n\nfunction createMarkupDaysForcast() {\n    \n}\n\n\n"],"names":["$1f0dc3b9307be026$var$city1","document","querySelector","$1f0dc3b9307be026$var$city2","$1f0dc3b9307be026$var$city3","$1f0dc3b9307be026$var$city4","$1f0dc3b9307be026$var$city5","$1f0dc3b9307be026$var$city6","$1f0dc3b9307be026$var$cityBack1","$1f0dc3b9307be026$var$cityBack2","$1f0dc3b9307be026$var$cityBack3","$1f0dc3b9307be026$var$cityBack4","$1f0dc3b9307be026$var$cityBack5","$1f0dc3b9307be026$var$cityBack6","$1f0dc3b9307be026$var$arrCity","$1f0dc3b9307be026$var$arrCityBack","$1f0dc3b9307be026$var$form","$1f0dc3b9307be026$var$main","addEventListener","evt","preventDefault","query","currentTarget","elements","footer_input","value","trim","days","footer_select","$1f0dc3b9307be026$var$getDaysWeather","then","data","console","log","catch","error","message","header_city","$1f0dc3b9307be026$var$getCityWeather","arr","innerHTML","location","name","current","condition","icon","country","text","wind_kph","pressure_mb","humidity","wind_dir","gust_kph","uv","temp_c","feelslike_c","finally","$1f0dc3b9307be026$var$cities","async","resp","fetch","ok","Error","statusText","json","arrayOfPromisses","map","city","Promise","all","$1f0dc3b9307be026$var$getWeather","forEach","item","idx","region","last_updated","$1f0dc3b9307be026$var$createMarkupBack"],"version":3,"file":"index.393fe9a7.js.map"}